/*
 * Copyright (C) 2014 Benito Palacios Sánchez
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */

package guitetris;

import data.Bloque;
import data.Figura;
import data.FiguraFactory;
import data.Punto;
import data.TipoBloque;
import java.awt.Color;
import java.awt.Graphics;

/**
 * Componente para mostrar cuando está en PAUSA.
 * 
 * @author Benito Palacios Sánchez.
 */
public class PausaPanel extends javax.swing.JPanel {

    private static final Punto Posicion = new Punto(25, 0);
    private static final int TamanoBloque = 4;
    
    private EscenarioPanel escenarioPanel;
    
    /**
     * Crea un nuevo componente.
     */
    public PausaPanel() {
        initComponents();
    }

    /**
     * Establece el escenario actual.
     * 
     * @param escenarioPanel Escenario.
     */
    public void setEscenarioPanel(final EscenarioPanel escenarioPanel) {
        this.escenarioPanel = escenarioPanel;
    }
    
    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
               
        // Pinta el fondo.
        g.setColor(Color.black);
        g.fillRect(0, 0, this.getWidth(), this.getHeight());

        // Pinta el mensaje.
        if (this.escenarioPanel != null && !this.escenarioPanel.isRunning())
            this.paintString(g, "PAUSA", Posicion);
    }
    
    /**
     * Pinta una cadena de caracteres.
     * 
     * @param g Utilidad de gráficos.
     * @param str Cadena de caracteres a pintar.
     * @param pos Posición a pintarla.
     */
    private void paintString(Graphics g, String str, Punto pos) {
        for (int i = 0; i < str.length(); i++) {
            Punto figPos  = pos.offset((TamanoBloque * Figura.GetInitSizeX() + 1) * i, 0);
            Figura figura = FiguraFactory.getChar(figPos, Color.red, str.charAt(i));
            if (figura != null)
                this.paintFigura(g, figura);
        }
    }
    
    /**
     * Pinta una figura.
     * 
     * @param g Utilidad de gráficos.
     * @param fig Figura a pintar.
     */
    private void paintFigura(Graphics g, Figura fig) {
        Punto pos = fig.getLocation();
        for (int c = 0; c < fig.getNumColumns(); c++) {
            for (int f = 0; f < fig.getNumRows(); f++) {
                Bloque bloque = fig.getBloque(f, c);
                if (bloque.getTipo() == TipoBloque.VACIO)
                    continue;
                
                int x = pos.getCoordX() + c * TamanoBloque;
                int y = pos.getCoordY() + f * TamanoBloque;
                
                // Pinta el bloque
                g.setColor(bloque.getColor());
                g.fillRect(x, y, TamanoBloque, TamanoBloque);
                
               // Pinta el borde
                g.setColor(Color.BLACK);
                g.drawRect(x, y, TamanoBloque, TamanoBloque);  
            }
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
